set -ga terminal-overrides ",xterm-256color*:Tc"
set -s escape-time 0

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# press p to close a split
bind q killp

# refresh the tmux config with r
bind r source-file ~/.tmux.conf
set -g base-index 1

# create splits with pipe and minus
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# vim-like pane switching (works for nvim to tmux panels also)
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D 
bind -r h select-pane -L
bind -r l select-pane -R

# pure vim movements (but does not work from nvim to tmux panes)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h  if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
bind-key -n C-k  if-shell  "$is_vim"  "send-keys C-k"  "select-pane -U"
bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
bind-key -n C-\   if-shell  "$is_vim"  "send-keys C-\\"  "select-pane -l"

# bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

# # forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww tmux-sessionizer"

# bind-key -r i run-shell "tmux neww tmux-cht.sh"
bind-key -r J run-shell "tmux-sessionizer ~/documents/WORK/placepoint"
bind-key -r K run-shell "tmux-sessionizer ~/documents/WORK/placepoint-graphics-processor"
bind-key -r L run-shell "tmux-sessionizer ~/documents/WORK/"
bind-key -r G run-shell "tmux-sessionizer ~/dotfiles"

# bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/work/milo"
# # bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
# bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/personal/vim-with-me"
# bind-key -r T run-shell "~/.local/bin/tmux-sessionizer ~/personal/refactoring.nvim"
# bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/personal/harpoon"
# bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/personal/developer-productivity"

######################
### DESIGN CHANGES ###
######################

# #C4A7E7
# #EBBCBA
# #9CCFD8


#  modes
setw -g clock-mode-colour '#9CCFD8'  # clock when ctr+a + t
setw -g mode-style 'fg=#21252B bg=#9CCFD8 bold' # for ctrl+a + s

# panes
# set -g pane-border-style 'fg=#8600ff bg=#e4ff00'
# set -g pane-active-border-style 'bg=#8600ff fg=#e4ff00'

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=#191725 fg=#9CCFD8 dim' # main backkground
# set -g status-left ''
set -g status-right ' #{?client_prefix,#[reverse]<----------Prefix---------->#[noreverse] ,} %H:%M %d-%b-%y' 
set -g status-left '#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}' 

set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style 'fg=#191724 bg=#9CCFD8 bold' # current window
setw -g window-status-current-format ' #I#[fg=#191726]:#[fg=#191724]#W#[fg=#191724]#F ' # current text 
setw -g window-status-style 'fg=#9CCFD8 bg=#191724'  # not current window
setw -g window-status-format ' #I#[fg=#9CCFD8]:#[fg=#9CCFD8]#W#[fg=#9CCFD8]#F ' # not current text

