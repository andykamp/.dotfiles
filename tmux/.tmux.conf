############################################################################
#
#               _________  _____ ______   ___  ___    ___    ___ 
#              |\___   ___\\   _ \  _   \|\  \|\  \  |\  \  /  /|
#              \|___ \  \_\ \  \\\__\ \  \ \  \\\  \ \ \  \/  / /
#                   \ \  \ \ \  \\|__| \  \ \  \\\  \ \ \    / / 
#                    \ \  \ \ \  \    \ \  \ \  \\\  \ \/    \/  
#                     \ \__\ \ \__\    \ \__\ \_______\/  /\  \  
#                      \|__|  \|__|     \|__|\|_______/__/ /\__\ 
#                                                     |__|/ \__| 
# insp from https://github.com/olimorris/dotfiles/blob/main/.config/tmux/tmux.conf
############################################################################


################################## CONF FILES ##################################
tmux_dir="~/dotfiles/tmux"
tmux_conf_dir="$tmux_dir/conf"
tmux_plugins_dir="~/.tmux/plugins"

# source "$tmux_conf_dir/opts.conf"
# source "$tmux_conf_dir/keybind.conf"
source "$tmux_conf_dir/skin.conf"

##################################            ##################################

set -ga terminal-overrides ",xterm-256color*:Tc"
set -g renumber-windows on      # renumber all windows when any window is closed
set -s escape-time 0            # zero-out escape time delay
set -g detach-on-destroy off    # don't exit from tmux when closing a session 


# Leader binding
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# press q to close a split
bind q killp

# refresh the tmux config with r
bind r source-file ~/.tmux.conf
set -g base-index 1

# create splits with pipe and minus
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"


######################
### VIM MOTIONS ###
######################

set-window-option -g mode-keys vi
# copy mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# TODO add more movement keys etc

# vim-like pane switching (works for nvim to tmux panels also)
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D 
bind -r h select-pane -L
bind -r l select-pane -R

# pure vim movements (but does not work from nvim to tmux panes)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h  if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
bind-key -n C-k  if-shell  "$is_vim"  "send-keys C-k"  "select-pane -U"
bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
bind-key -n C-\   if-shell  "$is_vim"  "send-keys C-\\"  "select-pane -l"

########################
### TMUX SESSIONIZER ###
########################

# bind t display-popup "tmux neww tmux-sessionizer"

# bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

# # forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww tmux-sessionizer"

# bind-key -r i run-shell "tmux neww tmux-cht.sh"
bind-key -r J run-shell "tmux-sessionizer ~/documents/WORK/placepoint"
bind-key -r K run-shell "tmux-sessionizer ~/documents/random"
bind-key -r L run-shell "tmux-sessionizer ~/documents/WORK/"
bind-key -r G run-shell "tmux-sessionizer ~/dotfiles"
bind-key -r F run-shell "tmux-sessionizer ~/documents/random"

######################
### DESIGN CHANGES ###
######################

# #C4A7E7
# #EBBCBA
# #9CCFD8


#  modes
setw -g clock-mode-colour '#9CCFD8'  # clock when ctr+a + t
# setw -g mode-style 'fg=#21252B bg=#9CCFD8 bold' # for ctrl+a + s

# panes
# set -g pane-border-style 'fg=#8600ff bg=#e4ff00'
# set -g pane-active-border-style 'bg=#8600ff fg=#e4ff00'

# statusbar

# when inactive
############################################################################
#|_TMUX_|                  1:window_1  2:window_2             |____info____|#
############################################################################

# when tmux-prefix is pressed
############################################################################
#|_WAIT_|                  1:window_1  2:window_2             |____WAIT___|#
############################################################################

# set -g status-position top
# set -g status-justify centre
# set -g status-style 'bg=#191725 fg=#9CCFD8 dim' # main backkground

# set -g status-left ''
# set -g status-right ' #{?client_prefix,#[reverse]<----------Prefix---------->#[noreverse] ,} %H:%M %d-%b-%y' 
# set -g status-left '#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}' 

# set -g status-right-length 51
# set -g status-left-length 20

#setw -g window-status-current-style 'fg=#191724 bg=#9CCFD8 bold' # current window
#setw -g window-status-current-format ' #I#[fg=#191726]:#[fg=#191724]#W#[fg=#191724]#F ' # current text 
# setw -g window-status-style 'fg=#9CCFD8 bg=#191724'  # not current window
#setw -g window-status-format ' #I#[fg=#9CCFD8]:#[fg=#9CCFD8]#W#[fg=#9CCFD8]#F ' # not current text

# setw -g window-status-format "#[fg=#808081,italics]#I: #[noitalics]#W"
# setw -g window-status-current-format "#[fg=#9CCFD8,italics]#I: #[fg=#191724,noitalics,bold]#W"


########################
# Plugins
########################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'                   # Plugin Manager

set -g @plugin 'tmux-plugins/tmux-cpu'              # Display CPU performance
set -g @plugin 'tmux-plugins/tmux-open'             # Open links from tmux - Select path and press o
set -g @plugin 'tmux-plugins/tmux-yank'             # Copy to system clipboard
set -g @plugin 'tmux-plugins/tmux-battery'          # Battery status in tmux
set -g @plugin 'tmux-plugins/tmux-sensible'         # Sensible defaults
set -g @plugin 'olimorris/tmux-pomodoro-plus'       # Pomodoro timer in tmux
set -g @plugin 'tmux-plugins/tmux-resurrect'        # Restore tmux sessions
set -g @plugin 'MunifTanjim/tmux-mode-indicator'    # Display current tmux mode


# Other examples:
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$tmux_plugins_dir/tpm/tpm'
